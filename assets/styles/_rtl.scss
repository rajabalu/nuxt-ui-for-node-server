/**
 * Comprehensive RTL Support System
 * This provides a systematic approach to RTL styling throughout the application
 * The approach uses both class-based and attribute-based selectors
 */

/* Base RTL Support - Applied when dir="rtl" attribute is set */
[dir="rtl"] {
  /* =================== */
  /* 1. Text Directionality */
  /* =================== */
  * {
    // Default direction for all elements
    text-align: inherit;
  }
  
  // Basic text alignment classes
  .text-start {
    text-align: right !important;
  }
  
  .text-end {
    text-align: left !important;
  }
  
  .text-left {
    text-align: right !important;
  }
  
  .text-right {
    text-align: left !important;
  }

  // General content elements - force RTL alignment for common content
  p, h1, h2, h3, h4, h5, h6, span, div:not(.v-expansion-panel-text__wrapper):not(.d-flex):not(.text-center) {
    text-align: right;
  }
  
  // Fix for numbered and bulleted lists
  ul, ol {
    text-align: right;
    padding-right: 20px;
    padding-left: 0;
  }
  
  // Special treatment for numbered lists in content pages
  ol {
    li {
      display: block;
      position: relative;
      padding-right: 5px;
    }
  }
  
  // Fix for ordered lists with numbers
  ol > li {
    position: relative;
    margin-bottom: 10px;
    
    &:before {
      position: absolute;
      right: -22px;
    }
  }
  
  // Extra fix for terms page and similar content
  ol > li, ul > li {
    text-align: right;
    direction: rtl;
  }
  
  li {
    text-align: right;
  }
  
  // Force all containers to respect RTL
  .v-container, .v-row, .v-col, .v-card {
    text-align: right;
  }
  
  /* =================== */
  /* 2. Margins & Padding */
  /* =================== */
  // Margin handling
  .ms-auto {
    margin-right: auto !important;
    margin-left: initial !important;
  }
  
  .me-auto {
    margin-left: auto !important;
    margin-right: initial !important;
  }
  
  .me-1, .me-2, .me-3, .me-4, .me-5, .me-6, .me-7, .me-8, .me-9, .me-10, .me-11, .me-12, .me-auto {
    margin-right: 0 !important;
  }
  
  .ms-1, .ms-2, .ms-3, .ms-4, .ms-5, .ms-6, .ms-7, .ms-8, .ms-9, .ms-10, .ms-11, .ms-12, .ms-auto {
    margin-left: 0 !important;
  }
  
  // Create RTL-aware margin utilities (this is more robust than the old approach)
  @each $size in (0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12) {
    .me-#{$size} {
      margin-left: #{$size * 4}px !important;
    }
    
    .ms-#{$size} {
      margin-right: #{$size * 4}px !important;
    }
  }
  
  // Legacy classes support
  .ml-auto {
    margin-left: unset !important;
    margin-right: auto !important;
  }
  
  .mr-auto {
    margin-right: unset !important;
    margin-left: auto !important;
  }

  /* =================== */
  /* 3. Layout Direction */
  /* =================== */
  // Flex direction
  .flex-row {
    flex-direction: row-reverse !important;
  }
  
  // Float utilities
  .float-start {
    float: right !important;
  }
  
  .float-end {
    float: left !important;
  }
  
  // Grid column ordering overrides
  @for $i from 1 through 12 {
    .order-#{$i} {
      // Let component use the useRTL composable for ordering
    }
  }

  /* =================== */
  /* 4. Borders & Outlines */
  /* =================== */
  .border-start {
    border-right: 1px solid rgba(var(--v-border-color), var(--v-border-opacity)) !important;
    border-left: none !important;
  }
  
  .border-end {
    border-left: 1px solid rgba(var(--v-border-color), var(--v-border-opacity)) !important;
    border-right: none !important;
  }
  
  .rounded-s {
    border-top-right-radius: var(--v-rounded-border-radius) !important;
    border-bottom-right-radius: var(--v-rounded-border-radius) !important;
    border-top-left-radius: 0 !important;
    border-bottom-left-radius: 0 !important;
  }
  
  .rounded-e {
    border-top-left-radius: var(--v-rounded-border-radius) !important;
    border-bottom-left-radius: var(--v-rounded-border-radius) !important;
    border-top-right-radius: 0 !important;
    border-bottom-right-radius: 0 !important;
  }

  /* =================== */
  /* 5. Vuetify Components */
  /* =================== */
  // Vuetify component specifics
  .v-list-item__prepend {
    margin-left: 16px;
    margin-right: 0;
  }
  
  .v-field__prepend-inner {
    padding-left: 4px;
    padding-right: 0;
  }
  
  .v-field__append-inner {
    padding-right: 4px;
    padding-left: 0;
  }
  
  .v-btn__prepend {
    margin-right: 0;
    margin-left: 8px;
  }
  
  .v-btn__append {
    margin-left: 0;
    margin-right: 8px;
  }
  
  // Fix for expansion panels in RTL mode
  .v-expansion-panel-title {
    flex-direction: row-reverse;
    
    .v-expansion-panel-title__icon {
      margin-left: 0;
      margin-right: auto;
      transform: rotate(180deg);
    }
  }
  
  .v-expansion-panel-text__wrapper {
    text-align: right;
  }
  
  // Fix for card layouts in RTL mode
  .v-card {
    &__title, &__subtitle, &__text {
      text-align: right;
    }
    
    .text-center {
      text-align: center !important;
    }
  }
  
  // Settings specific UI elements
  .v-tabs--vertical .v-tab {
    text-align: right;
    justify-content: flex-start;
  }
  
  // Form elements
  .v-label {
    text-align: right;
  }
  
  // Input fields (globally apply RTL to all inputs)
  input, 
  textarea,
  .v-field__input {
    text-align: right !important;
    direction: rtl !important;
  }
  
  /* Settings page improvements */
  .v-window-item {
    text-align: right;
  }
  
  /* Form label alignment */
  .form-label {
    text-align: right;
    display: block;
  }
  
  // Cards and containers
  .v-card-title {
    text-align: right;
  }
  
  .v-card-text {
    text-align: right;
  }
  
  /* =================== */
  /* 6. Navigation & Menus */
  /* =================== */
  // User dropdown in TopBar
  .v-menu .v-list-item__prepend {
    margin-left: 12px;
    margin-right: 0;
  }
  
  .v-list-item__prepend {
    margin-right: 0 !important;
    margin-left: 16px !important;
  }
  
  .v-list-item__append {
    margin-left: 0 !important;
    margin-right: 16px !important;
  }
  
  /* =================== */
  /* 7. Icons & Badges */
  /* =================== */
  // Directional icons (automatic flipping)
  .v-icon:not(.keep-direction) {
    &:dir(rtl) {
      &.mdi-chevron-left,
      &.mdi-chevron-right,
      &.mdi-arrow-left,
      &.mdi-arrow-right,
      &[class*="tabler-arrow-"],
      &[class*="tabler-chevron-"] {
        transform: scaleX(-1);
      }
    }
  }

  /* =================== */
  /* 8. Flex Containers */
  /* =================== */
  // Fix alignment for flex containers in RTL
  .d-flex {
    &.flex-row {
      flex-direction: row-reverse !important;
    }
    
    &.align-center, &.justify-center {
      // Keep centered items in place
      &.text-center {
        text-align: center !important;
      }
    }
  }

  // Keep center alignment for flex columns
  .flex-column {
    &.align-center {
      align-items: center !important;
      text-align: inherit;
    }
  }

  /* =================== */
  /* 9. Content Elements */
  /* =================== */
  // Fix for numbered lists
  ol {
    counter-reset: item;
    list-style-type: none;
    padding-right: 20px !important;
    
    > li {
      position: relative;
      
      &:before {
        content: counters(item, ".") ". ";
        counter-increment: item;
        position: absolute;
        right: -20px;
      }
    }
  }

  // Fix for nested content
  .v-container, .v-row, .v-col {
    * {
      direction: inherit;
    }
  }

  // Fix for text and paragraphs to properly respect RTL
  p {
    text-align: right !important;
    direction: rtl !important;
  }

  // Force RTL on all content - this is necessary for proper text rendering
  .v-application__wrap, .v-main {
    direction: rtl;
  }
}

/* Specific fixes for Vuetify's RTL support */
.v-application {
  &[dir="rtl"] {
    // Handle any Vuetify-specific RTL issues here
    .v-field__field {
      text-align: right;
    }
    
    // This ensures fields with append/prepend icons have correct spacing
    .v-field--appended {
      padding-left: 12px;
      padding-right: 0;
    }
    
    .v-field--prepended {
      padding-right: 12px;
      padding-left: 0;
    }
    
    // Ensure all content within the application has RTL direction
    .v-main__wrap {
      direction: rtl;
      text-align: right;
    }
    
    // Fix for all card content
    .v-card {
      &-title, &-text, &-subtitle, &__title, &__text, &__subtitle {
        text-align: right !important;
      }
    }
    
    // Fix for v-divider spacing
    .v-divider {
      margin-left: 0;
      margin-right: 0;
    }
    
    // Fix for all headings
    h1, h2, h3, h4, h5, h6, .text-h1, .text-h2, .text-h3, .text-h4, .text-h5, .text-h6 {
      text-align: right !important;
    }
  }
}

/* RTL Mode Class - Alternative to dir attribute */
.rtl-mode {
  direction: rtl;
  
  // Notifications and alerts
  .notification-item,
  .v-alert {
    text-align: right;
  }
  
  // Lists
  ul, ol {
    padding-right: 20px;
    padding-left: 0;
  }
}

/* Helper class for Arabic text styling if needed */
.arabic-text {
  font-family: 'Tajawal', 'Roboto', sans-serif; // Add an Arabic-compatible font
} 

/* These utility classes can be applied directly in templates */
.rtl-flip {
  &:dir(rtl) {
    transform: scaleX(-1);
  }
}

.rtl-text-right {
  &:dir(rtl) {
    text-align: right !important;
  }
}

.rtl-text-left {
  &:dir(rtl) {
    text-align: left !important;
  }
}

.rtl-reverse {
  &:dir(rtl) {
    flex-direction: row-reverse !important;
  }
}

/**
 * RTL Support Stylesheet
 * Provides utility CSS variables and classes for RTL support
 */

:root {
  // Directional variables for consistent RTL/LTR support
  --start-direction: left;
  --end-direction: right;
  --text-align-start: left;
  --text-align-end: right;
  --float-start: left;
  --float-end: right;
  --origin-start: left;
  --origin-end: right;
  --border-start: border-left;
  --border-end: border-right;
  --margin-start: margin-left;
  --margin-end: margin-right;
  --padding-start: padding-left;
  --padding-end: padding-right;
  --translate-direction: 1; // 1 for LTR, -1 for RTL
  --flex-direction: row;
}

// RTL mode - flip all directional variables
html.rtl, body.rtl, .rtl {
  --start-direction: right;
  --end-direction: left;
  --text-align-start: right;
  --text-align-end: left;
  --float-start: right;
  --float-end: left;
  --origin-start: right;
  --origin-end: left;
  --border-start: border-right;
  --border-end: border-left;
  --margin-start: margin-right;
  --margin-end: margin-left;
  --padding-start: padding-right;
  --padding-end: padding-left;
  --translate-direction: -1;
  --flex-direction: row-reverse;
}

// RTL Utility Classes
.text-start {
  text-align: var(--text-align-start) !important;
}

.text-end {
  text-align: var(--text-align-end) !important;
}

.float-start {
  float: var(--float-start) !important;
}

.float-end {
  float: var(--float-end) !important;
}

.margin-start {
  margin-left: 0;
  margin-right: 0;
  margin-inline-start: var(--start-direction) !important;
}

.margin-end {
  margin-left: 0;
  margin-right: 0;
  margin-inline-end: var(--end-direction) !important;
}

.padding-start {
  padding-left: 0;
  padding-right: 0;
  padding-inline-start: var(--start-direction) !important;
}

.padding-end {
  padding-left: 0;
  padding-right: 0;
  padding-inline-end: var(--end-direction) !important;
}

.flex-row {
  flex-direction: var(--flex-direction) !important;
}

// Fix for Vuetify components in RTL mode
.rtl {
  .v-btn__prepend {
    margin-right: 0;
    margin-left: 8px;
  }
  
  .v-btn__append {
    margin-left: 0;
    margin-right: 8px;
  }
  
  .v-list-item__prepend {
    margin-right: 0;
    margin-left: 16px;
  }
  
  .v-list-item__append {
    margin-left: 0;
    margin-right: 16px;
  }
} 